<?php
/**
* autoGenerated on 2011-10-31
* @package models
* @subpackage
* @class userRightDomains
*/

require dirname(__file__).'/BASE_userRightDomains.php';

class userRightDomains extends BASE_userRightDomains{
	// define here all your user defined stuff so you don't bother updating BASE_userRightDomains class
	// should also be the place to redefine anything to overwrite what has been unproperly generated in BASE_userRightDomains class
	/**
	* list of filters used as callback when setting datas in fields.
	* this permitt to automate the process of checking datas setted.
	* array('fieldName' => array( callable filterCallBack, array additionalParams, str errorLogMsg, mixed $errorValue=false);
	* 	minimal callback prototype look like this:
	* 	function functionName(mixed $value)
	* 	callback have to return the sanitized value or false if this value is not valid
	* 	logMsg can be retrieved by the metod getFiltersMsgs();
	* 	additionnalParams and errorLogMsg are optionnals and can be set to null to be ignored
	* 	(or simply ignored but only if you don't mind of E_NOTICE as i definitely won't use the @ trick)
	*   $errorValue is totally optional and permit to specify a different error return value for filter than false
	*   (can be usefull when you use filter_var to check boolean for example)
	* )
	*/
	static protected $filters = array(
		'name'=>array(
			'trim'
			,array('match','!^[a-z0-9_-]+$!i','Right domain name contain invalid characters, allowed characters are a-z A-Z 0-9 _ and -.')
			,array('range',array(3,25),'Right name has to be between 3 to 25 characters long.')
		)
	);

	static protected $modelName = 'userRightDomains';

	/** formatString to display model as string */
	static public $__toString = '%name';

	/** names of modelAddons this model can manage */
	static protected $modelAddons = array('filters');
	/**
	* if true then the model can't have an empty primaryKey value (empty as in php empty() function)
	* so passing an empty PrimaryKey at getInstance time will result to be equal to a getNew call
	*/
	static protected $_avoidEmptyPK = true;
	/**
	* Make use userRightDomains::$_hasOne and/or userRightDomains::$_hasMany if you want to override thoose defined in BASE_userRightDomains
	* any key set to an empty value will be dropped, others will be appended if not exists or override if exists
	* MUST BE PUBLIC (yes it's a shame) but get_class_vars presents bug in some php version
	* static public $_hasOne = array();
	* static public $_hasMany = array();
	*/
	static public $_hasMany = array(
		 'userRights' => null
		,'rights' => array(
			 'modelName'=>'userRights'
			,'foreignField'=>'userRightDomain'
			,'relType'=>'requiredBy'
		),
	);
}
/**
* @class userRightDomainsCollection
*/
class userRightDomainsCollection extends modelCollection{
	/**
	* you can override here default modelCollection methods
	*/
	protected $collectionType = 'userRightDomains';

	public function __construct(array $modelList=null){
		parent::__construct($this->collectionType,$modelList);
	}
	static public function init(array $modelList=null){
		return new userRightDomainsCollection($modelList);
	}
}
